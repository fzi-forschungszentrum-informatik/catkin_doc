The catkin_doc project
=======================

Generally this package generates some documentation for ros nodes.
For each ros node declared in the package python nodes as well as cpp nodes the project generates a documentation file.
The file can be either mark-down or restructuredtext depending on your input.

How to use
___________
Please consider that the generated files are currently put in the directory from which you envoke the script.

How to create new documentation for a package:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Just type in your console for restruckturedtext docu:
::
    python bin/catkin_doc "/path/to/your/package" "rst"
    
or for markdown docu:
::
    python bin/catkin_doc "/path/to/your/package" "md"
    
How to update existing documentation:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
If resulting new documentation sould be restruckturedtext type:
::
    python bin/update_catkin_doc.py "/path/to/your/package" "rst"
For markdown type:
::
    python bin/update_catkin_doc.py "/path/to/your/package" "md"
    
Be aware that the type of the previous documentation does not influence the type of the resulting docu.
Meaning this functionality also allows switching between markdown and restruckturedtext documentation.
This functionality will only work correctly if the old documentation is generated by this package.
Be aware that anything additional you wrote in the documentation except explanations for the parameter, subscriber,... will most likely be deleted.
The update funcionality will automatically find the documentation for the nodes if the documentation is within the given package and you did not change the filename.
If no matching documentation is found you will be asked to enter the path to and including the documentation file.
The functionality will not delete any of explanations you made concerning the entries by default.
Instead if it finds a new comment in the code it will ask you if you want to keep the old comment or replace it.
The same applies if an entry, e.g. a service which was in the old docu could not be found in the  current code.
If the default value for parameter or the msg type has changed it will simply replace the old one but notify you on the terminal.
The funcionality does not overwrite the old documentation by default, instead it ouputs the resulting documentation in a file "nodename.rst/md" in the directory from which you envoke the script.